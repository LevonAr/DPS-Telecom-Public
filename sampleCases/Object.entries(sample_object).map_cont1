const ExtTab = (function (){
    // create Comparitor options
    const COMP_CONFIG = [
        { value: 'all-text', label: 'All', selected: true },
        { value: 'cms-text', label: 'CMS' },
        { value: 'extractor', label: 'Extractor' },
        { value: 'firefox', label: 'Firefox' }
    ];
    const compLeft = MDC_UTILS.createSelect('Compare Left', COMP_CONFIG);
    const compRight = MDC_UTILS.createSelect('Compare Right', COMP_CONFIG);
    const compLeftMDC = new mdc.select.MDCSelect(compLeft);
    const compRightMDC = new mdc.select.MDCSelect(compRight);
    ////////////////////////////////////////

    var pos =0
    function selectview(classname) {
        [...document.getElementsByClassName(classname)]
            .forEach(e => {
                let key = e.getAttribute('key');
                let displayElement = document.getElementById(key);
                displayElement.style.display = e.checked ? '' : 'none';
            });
    }

    function filltext(a, b, c) {
        fill = document.querySelectorAll('input[name="editarea"]');
        if (document.getElementById("cb7").checked) {
            document.getElementById("useredit").value = a;
        }
        if (document.getElementById("cb8").checked) {
            document.getElementById("useredit").value = b;
        }
        if (document.getElementById("cb9").checked) {
            document.getElementById("useredit").value = c;
        }
    }
    

    const insidein = document.createElement('div')
    insidein.setAttribute("id", "choices")
    insidein.innerHTML = `
        <input type="checkbox" id="cb1" class="cb-sbs" key="extract-det-all" onclick="ExtTab.selectview('cb-sbs')"  checked>
        <label for="cb1">All</label>
        <input type="checkbox" id="cb4" class="cb-sbs" key="extract-det-cms-text" onclick="ExtTab.selectview('cb-sbs')">
        <label for="cb4">CMS</label>
        <input type="checkbox" id="cb2" class="cb-sbs" key="extract-det-hb" onclick="ExtTab.selectview('cb-sbs')">
        <label for="cb2">Extractor</label>
        <input type="checkbox" id="cb3" class="cb-sbs" key="extract-det-firefox" onclick="ExtTab.selectview('cb-sbs')">
        <label for="cb3">Firefox</label>
        <input type="checkbox" id="cb5" class="cb-sbs" key="extract-det-cms-html" onclick="ExtTab.selectview('cb-sbs')">
        <label for="cb5">CMS HTML</label>
        <div style="border-top: 1px solid #ccc; margin-top: 40px;"></div>      
    `;

    const radioin = document.createElement('div')
    radioin.setAttribute("id", "rchoices")
    radioin.innerHTML = `
        <input type="radio" name="comp" id="cb4" class="cb-comp" key="all-e" onclick="ExtTab.selectview('cb-comp')" checked>
        <label for="cb4">All vs Extracted</label>
        <input type="radio" name="comp" id="cb5" class="cb-comp" key="e-f"   onclick="ExtTab.selectview('cb-comp')">
        <label for="cb5">Extractor vs Firefox</label>
        <input type="radio" name="comp" id="cb6" class="cb-comp" key="f-all" onclick="ExtTab.selectview('cb-comp')">
        <label for="cb6">Firefox vs All</label>
    `;    

    function showkwd() {
        tabProgress.foundation.adapter.addClass("loading");
        fetch('/api/keyword', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            },
            body: JSON.stringify({
                test: document.getElementById("useredit").value,
            })
        })
            .then(response => response.json())
            //.then(console.log)
            //
            .then(data => {
                // remove loader
                tabProgress.foundation.adapter.removeClass("loading");
                var obj = JSON.stringify(data)
                console.log("stuff is here", obj)
                document.getElementById("kwdbox").innerHTML = `
                    <div style="display: grid; grid-template-columns: repeat(2, 1fr);">
                        ${Object.entries(data.result).map(([key, value]) => `
                            <div style="border: solid 1px; padding: 10px; margin: 13px; border-radius: 4px; border-color: rgba(0,0,0,.12);">
                                <b size="12">${key}</b>
                                <br>
                                <ol>
                                    ${value.map((item, i) => `
                                        <li><b>${item[0]}</b> ${MathUtils.displayFloat(item[1])}<br></li>
                                    `).join("")}
                                </ol>
                            </div>
                            `).join("")}
                    </div>
                `;
                document.getElementById("readbox").style.display = "none";
                document.getElementById("kwdbox").style.display = "block";
            })
    }
    //                                        ${MathUtils.displayFloat(item[1])}<br>

